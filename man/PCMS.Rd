% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCMS.R
\name{PCMS}
\alias{PCMS}
\title{Principal curve metric scaling}
\usage{
PCMS(Z, H)
}
\arguments{
\item{Z}{a square symmetric matrix.}

\item{H}{a spline basis matrix, assumed to have orthonormal columns. If not orthonotmal, orthogonalization should be done via QR decomposition prior to running this function.}
}
\value{
A list containing the PCMS problem solution:
\itemize{
  \item \code{Theta} -- the matrix of spline parameters.
  \item \code{X} -- the resulting conformation reconstruction.
  \item \code{loss} -- the resulting value of the PCMS objective.
  \item \code{rank} -- the resulting rank of the PCMS objective (can be \eqn{\leq 3}).
}
}
\description{
PCMS function calculates the principal curve metric scaling solution for some similarity matrix \eqn{Z} and a spline basis matrix \eqn{H}.
The optimal solution is found via minimizing the Frobenius norm \deqn{\|Z - S(X)\|^2_F}{||Z - S(X)||^2_F} w.r.t. \eqn{\Theta} subject to the smooth curve constraint \eqn{X = H\Theta}. 
Here \deqn{S(X) = XX^T}{S(X) = XX'} refers to the matrix of inner products.
The spatial coordinates of the resulting reconstruction are presented in \eqn{X}.
}
\examples{
data(C)

#transform contact counts to similarities
D = 1/(C+1)
Z = -D^2/2
Z = scale(Z, scale = FALSE, center = TRUE)
Z = t(scale(t(Z), scale = FALSE, center = TRUE))

#create spline basis matrix
H = splines::bs(1:ncol(C), df = 5)

#orthogonalize H using QR decomposition
H = qr.Q(qr(H))

#compute the PCMS solution
PCMS(Z, H)

}
